{
	"info": {
		"_postman_id": "auth-collection-001",
		"name": "01 - User Authentication",
		"description": "User authentication endpoints including login, registration, and password reset",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Register",
			"item": [
				{
					"name": "Register - Valid User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"newuser@example.com\",\n    \"password\": \"SecurePass123\",\n    \"role\": \"USER\",\n    \"username\": \"newuser\",\n    \"firstName\": \"New\",\n    \"lastName\": \"User\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "register"]
						}
					}
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "Login - f36meng (USER)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has token\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('token');",
									"    pm.collectionVariables.set('authToken', responseJson.token);",
									"});",
									"",
									"pm.test(\"Token is valid JWT format\", function () {",
									"    const responseJson = pm.response.json();",
									"    const tokenParts = responseJson.token.split('.');",
									"    pm.expect(tokenParts.length).to.eql(3);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"f36meng@gmail.com\",\n    \"password\": \"hm06050821\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Login - Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 for invalid credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Response does not contain token\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.not.have.property('token');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"wronguser@example.com\",\n    \"password\": \"wrongpassword\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					}
				},
				{
					"name": "Login - Missing Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 for missing password\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"f36meng@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "login"]
						}
					}
				}
			]
		},
		{
			"name": "Password Reset",
			"item": [
				{
					"name": "Forgot Password - Valid Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success message\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('message');",
									"    pm.expect(responseJson.message).to.include('sent');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"f36meng@gmail.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/forgot-password",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "forgot-password"]
						}
					}
				},
				{
					"name": "Reset Password - Valid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response has success message\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson).to.have.property('message');",
									"    pm.expect(responseJson.message).to.include('reset');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{resetToken}}\",\n    \"newPassword\": \"NewSecurePass123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/reset-password",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "reset-password"]
						}
					}
				},
				{
					"name": "Reset Password - Invalid Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 or 500 for invalid token\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([400, 500]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"invalid-token-12345\",\n    \"newPassword\": \"NewSecurePass123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/reset-password",
							"host": ["{{baseUrl}}"],
							"path": ["api", "auth", "reset-password"]
						}
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "authToken",
			"value": ""
		},
		{
			"key": "resetToken",
			"value": ""
		}
	]
}
